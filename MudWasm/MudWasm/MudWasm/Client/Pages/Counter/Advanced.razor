@page "/counter/advanced"
@using MudWasm.Client.Navigation
@inherits BasePageComponent
@inject CounterStateContainer CounterState

<PageTitle>Counter</PageTitle>

<MudBreadcrumbs Items="GetBreadcrumbItems()"/>

<MudGrid Justify="Justify.Center">
    <MudItem Class="align-center" xs="4">
        <MudPaper Class="pa-8 ma-2 d-flex flex-column" Outlined="true">
            <MudText Align="Align.Center" Typo="Typo.h3" GutterBottom="true">Counter advanced</MudText>
            <MudText Align="Align.Center" Typo="Typo.h1" Class="mb-4">@CounterState.Count</MudText>
            <MudSlider Class="mb-6" @bind-Value="_sliderValue" Size="Size.Medium" TickMarks="true" TickMarkLabels="@labels" Min="1" Max="10" Step="1" />
            <MudRadioGroup Class="align-self-center my-5" @bind-SelectedOption="@SelectedOption">
                <MudRadio Option="@("Plus")" Color="Color.Primary">Plus</MudRadio>
                <MudRadio Option="@("Minus")" Color="Color.Primary">Minus</MudRadio>
                <MudRadio Option="@("Multiply")" Color="Color.Primary">Multiply</MudRadio>
                <MudRadio Option="@("Division")" Color="Color.Primary">Division</MudRadio>
            </MudRadioGroup>
            <MudButton Color="Color.Primary" Variant="Variant.Filled" @onclick="UpdateCount">Click me</MudButton>
        </MudPaper>
    </MudItem>
</MudGrid>

@code {
    public string SelectedOption { get; set; } = "Plus";

    private int _sliderValue = 5;
    private string[] labels = new string[] { "1","2","3","4","5","6","7","8","9","10" };


    protected override void OnInitialized()
    {
        Title = "Advanced";
        base.OnInitialized();
    }

    private void UpdateCount()
    {
        switch(SelectedOption)
        {
            case "Plus":
                CounterState.Count = CounterState.Count + _sliderValue;
                break;
            case "Minus":
                CounterState.Count = CounterState.Count - _sliderValue;
                break;
            case "Multiply":
                CounterState.Count = CounterState.Count * _sliderValue;
                break;
            case "Division":
                CounterState.Count = CounterState.Count / _sliderValue;
                break;
            default:
                break;
        }
    }
}
